<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApplicationSubTitle.Text" xml:space="preserve">
    <value>Working together for cleaner and greener places</value>
  </data>
  <data name="ApplicationTitle.Text" xml:space="preserve">
    <value>Love Riyadh Clean Streets</value>
  </data>
  <data name="LayoutDirection" xml:space="preserve">
    <value>LTR</value>
  </data>
  <data name="lblAboutus" xml:space="preserve">
    <value>About Us</value>
  </data>
  <data name="lblBuildingNo/Location.Header" xml:space="preserve">
    <value>Building No / Location</value>
  </data>
  <data name="lblDescription.Text" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="lblDistrict.Text" xml:space="preserve">
    <value>District</value>
  </data>
  <data name="lblEnterdistrictname.PlaceholderText" xml:space="preserve">
    <value>Enter District Name</value>
  </data>
  <data name="lblEnterstreetname.PlaceholderText" xml:space="preserve">
    <value>Enter Street Name</value>
  </data>
  <data name="lblEnteryourobservation.PlaceholderText" xml:space="preserve">
    <value>Enter Your Observation</value>
  </data>
  <data name="lblform" xml:space="preserve">
    <value>Form</value>
  </data>
  <data name="lblHelp" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="lblLatitude/Long.Text" xml:space="preserve">
    <value>Latitude / Long.</value>
  </data>
  <data name="lblMyreports.Header" xml:space="preserve">
    <value>My Reports</value>
  </data>
  <data name="lblNeedhelptosubmitreport" xml:space="preserve">
    <value>Need Help To Submit Report</value>
  </data>
  <data name="lblObservation.Text" xml:space="preserve">
    <value>Observation</value>
  </data>
  <data name="lblPickerDate.Header" xml:space="preserve">
    <value>Search Term</value>
  </data>
  <data name="lblPublishedbyCKAT.Text" xml:space="preserve">
    <value>Published By CKAT</value>
  </data>
  <data name="lblReportcanbesearchedusingthedatepicker.Text" xml:space="preserve">
    <value>Report can be searched using the date picker on the right section of you application. Once you select your input date and click on OK button system will search all report based on input date.</value>
  </data>
  <data name="lblSaveReport.Content" xml:space="preserve">
    <value>Save Report</value>
  </data>
  <data name="lblSearchreport.Header" xml:space="preserve">
    <value>Search Report</value>
  </data>
  <data name="lblSearchreports" xml:space="preserve">
    <value>Search Reports</value>
  </data>
  <data name="lblSelectdate" xml:space="preserve">
    <value>Select Date</value>
  </data>
  <data name="lblSharereport.Text" xml:space="preserve">
    <value>Share Report</value>
  </data>
  <data name="lblShowmyreports" xml:space="preserve">
    <value>Show My Reprots</value>
  </data>
  <data name="lblShowReport" xml:space="preserve">
    <value>Show Report</value>
  </data>
  <data name="lblShowreportwilldisplayallyourlocallysavedreports.Text" xml:space="preserve">
    <value>Show Report will display all your locally saved reports and you may submit/share report with anyone via share contract or by clicking on submit button while you are on the report detail page.</value>
  </data>
  <data name="lblStatusmessage.Text" xml:space="preserve">
    <value>Status Message</value>
  </data>
  <data name="lblStreet.Text" xml:space="preserve">
    <value>Street</value>
  </data>
  <data name="lblSubmitReport.Content" xml:space="preserve">
    <value>Submit Report</value>
  </data>
  <data name="lblTakePicture.Content" xml:space="preserve">
    <value>Take Picture</value>
  </data>
  <data name="lblTasks.Header" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="lblTechinical support/feedbackemail.Text" xml:space="preserve">
    <value>technical support/feedback email: support@mwmsr.net</value>
  </data>
  <data name="lblThisisanonofficialRiyadhcitystreetscleaningobservationAp.Text" xml:space="preserve">
    <value>This is a non-official Riyadh city streets cleaning observations App to make Riyadh a more clean, green and beautiful place.</value>
  </data>
  <data name="lblThisisgeneralguidelines.Text" xml:space="preserve">
    <value>This is general guidlines how to use the application functionalities.</value>
  </data>
  <data name="lblYoumayaddnewreporttotheapplication.Text" xml:space="preserve">
    <value>You may add new report to the application on clicking the submit report title on main screen. once you click the title this will land you in the report submision detail page where you can enter the street name the district name and observation name. Take Observation picture and save the record into you local storage, system will take the location information additional if allowed by user to tag the picture at current location.</value>
  </data>
  <data name="lblYoumaysharesubmityourreporttoanyone.Text" xml:space="preserve">
    <value>You may share/submit your report to anyone using the submit button on the report detail page. On Share charm please select the mail application to share your report with picture and location details.</value>
  </data>
  <data name="lblYoumaysubmittheRiyadhcitystreetobservation" xml:space="preserve">
    <value>You May Submit the Riyadh City Street Observations</value>
  </data>
  <data name="KnowAboutUs" xml:space="preserve">
    <value>Know About Us</value>
  </data>
  <data name="SubmitReport" xml:space="preserve">
    <value>Submit Report</value>
  </data>
  <data name="lblHelpTxt.Text" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="lblSearchreportsHelp.Text" xml:space="preserve">
    <value>Search Report</value>
  </data>
  <data name="lblShowReportHelp.Text" xml:space="preserve">
    <value>Show Report</value>
  </data>
  <data name="lblSubmitReportHelp.Text" xml:space="preserve">
    <value>Submit Report</value>
  </data>
  <data name="lblSubmitShareReport.Content" xml:space="preserve">
    <value>Submit Report</value>
  </data>
  <data name="lblUpdateReport.Content" xml:space="preserve">
    <value>Update Report</value>
  </data>
  <data name="lblAbout.Text" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ImageSetFromStorage" xml:space="preserve">
    <value>Image Set From Storage</value>
  </data>
  <data name="msgImageCapture" xml:space="preserve">
    <value>Image Captured successfully!</value>
  </data>
  <data name="msgImageSaved" xml:space="preserve">
    <value>CapturedImage Saved Picture Folder!</value>
  </data>
  <data name="msgNoCapture" xml:space="preserve">
    <value>No photo captured</value>
  </data>
  <data name="msgNoPhotoSaved" xml:space="preserve">
    <value>No photo saved</value>
  </data>
  <data name="msgPhotoFirst" xml:space="preserve">
    <value>Please Take Photo First</value>
  </data>
  <data name="NoImageExist" xml:space="preserve">
    <value>No Image Exist</value>
  </data>
  <data name="NoImageFound" xml:space="preserve">
    <value>No Image Found</value>
  </data>
  <data name="NoRecordFound" xml:space="preserve">
    <value>No Record Found!</value>
  </data>
  <data name="obsSaved" xml:space="preserve">
    <value>Observation Saved</value>
  </data>
  <data name="obsUpdate" xml:space="preserve">
    <value>Observation Updated</value>
  </data>
  <data name="PleaseSelectMail" xml:space="preserve">
    <value>Please Select Mail Link to Send Email</value>
  </data>
  <data name="plsEnterObservation" xml:space="preserve">
    <value>Please Choose Observation from list</value>
  </data>
  <data name="plsEnterStreet" xml:space="preserve">
    <value>Please Enter Street Name</value>
  </data>
  <data name="lblAppBarAbout.Label" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="lblAppBarHelp.Label" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="lblAppBarHome.Label" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="lblPleaseTakePicture.Text" xml:space="preserve">
    <value>Please take the picture of your report.</value>
  </data>
  <data name="lblSaveReport.Label" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="lblSharereportAppBar.Label" xml:space="preserve">
    <value>Send</value>
  </data>
  <data name="lblUpdateReport.Label" xml:space="preserve">
    <value>Update</value>
  </data>
</root>